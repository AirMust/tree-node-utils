{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap cdbfad03d7ce87171659","webpack:///./src/index.js","webpack:///./src/TreeNodeUtils.js"],"names":["default","TreeNodeUtils","config","keyField","childrenField","nodeData","children","length","nodes","key","found","self","node","hasChildren","getNodeByKey","predicate","foundChildren","findNodes","res","filteredChildren","isBranch","map","childNode","filterNode","filter","i","hasChildrenMatched","isNodeItselfMatched","childrenData","Object","assign","filterFunc","compareFunction","sort","sortNode","mapFunction","parentNode","mappedNode","mapNode","n","newChildrenField","newNode","renameChildrenFieldForNode"],"mappings":"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","file":"tree-node-utils.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"tree-node-utils\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"tree-node-utils\"] = factory();\n\telse\n\t\troot[\"tree-node-utils\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap cdbfad03d7ce87171659","export { default } from './TreeNodeUtils';\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","export default class TreeNodeUtils {\n  constructor(config = {}) {\n    this.keyField = config.keyField || 'key';\n    this.childrenField = config.childrenField || 'children';\n  }\n\n  hasChildren(nodeData) {\n    const children = nodeData && nodeData[this.childrenField];\n    return children && children.length > 0;\n  }\n\n  isBranch(nodeData) {\n    const children = nodeData && nodeData[this.childrenField];\n    return children && children.length >= 0;\n  }\n\n  getNodeByKey(nodes, key) {\n    let found = null;\n    const self = this;\n\n    for (const node of nodes) {\n      if (node[self.keyField] === key) {\n        found = node;\n      } else if (self.hasChildren(node)) {\n        found = self.getNodeByKey(node[self.childrenField], key);\n      }\n\n      if (found) {\n        break;\n      }\n    }\n\n    return found;\n  }\n\n  findNodes(nodes, predicate) {\n    let found = [];\n    const self = this;\n\n    for (const node of nodes) {\n      if (predicate(node)) {\n        found = [...found, node];\n      }\n\n      if (self.hasChildren(node)) {\n        const foundChildren = self.findNodes(node[self.childrenField], predicate);\n        found = [...found, ...foundChildren];\n      }\n    }\n\n    return found;\n  };\n\n\n  filterNode(node, predicate) {\n    let res = null;\n    const self = this;\n\n    const filteredChildren = self.isBranch(node) ? node[self.childrenField].map((childNode) =>\n        self.filterNode(childNode, predicate)).filter(i => i !== null) : null;\n\n    const hasChildrenMatched = filteredChildren && filteredChildren.length > 0;\n    const isNodeItselfMatched = predicate(node);\n\n    if (isNodeItselfMatched || hasChildrenMatched) {\n      const childrenData = filteredChildren ? { [self.childrenField]: filteredChildren } : {};\n      res = Object.assign({}, node, childrenData);\n    }\n\n    return res;\n  }\n\n  filterNodes(nodes, predicate) {\n    const filterFunc = (node) => this.filterNode(node, predicate);\n    return nodes.map(node => this.filterNode(node, filterFunc)).filter(i => i !== null);\n  }\n\n  sortNode(node, compareFunction) {\n    const self = this;\n    if (self.hasChildren(node)) {\n      const children = [...node[self.childrenField]]\n        .sort(compareFunction)\n        .map(childNode => self.sortNode(childNode, compareFunction));\n      return { ...node, [self.childrenField]:children };\n    }\n\n    return node;\n  }\n\n  sortNodes(nodes, compareFunction) {\n    return nodes.sort(compareFunction).map(node => this.sortNode(node, compareFunction));\n  }\n\n  mapNode(node, mapFunction, parentNode) {\n    const self = this;\n\n    const mappedNode = mapFunction({ ...node }, parentNode);\n\n    if (self.hasChildren(node)) {\n      const children = node[self.childrenField]\n        .map(n => self.mapNode(n, mapFunction, mappedNode));\n\n      mappedNode[self.childrenField] = children;\n    }\n\n    return mappedNode;\n  }\n\n  mapNodes(nodes, mapFunction) {\n    return nodes.map(node => this.mapNode(node, mapFunction));\n  }\n\n  renameChildrenFieldForNode(node, newChildrenField) {\n    const self = this;\n    const children = node[self.childrenField];\n    const newNode = { ...node };\n\n    if (self.hasChildren(node)) {\n      delete newNode[self.childrenField];\n      newNode[newChildrenField] = children\n        .map(n => self.renameChildrenFieldForNode(n, newChildrenField));\n    }\n\n    return newNode;\n  }\n\n  renameChildrenFieldForNodes(nodes, newChildrenField) {\n    return nodes.map(node => this.renameChildrenFieldForNode(node, newChildrenField));\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/TreeNodeUtils.js"],"sourceRoot":""}